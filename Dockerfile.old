# Build stage
FROM golang:1.23-alpine AS builder

# Set environment variables to bypass proxy and TLS verification
ENV HTTP_PROXY=""
ENV HTTPS_PROXY=""
ENV NO_PROXY="localhost,127.0.0.1"
ENV GODEBUG=x509ignoreCN=0
ENV GIT_SSL_NO_VERIFY=1
ENV GO111MODULE=on

# Install git and ca-certificates
RUN apk add --no-cache git ca-certificates

# Set the working directory
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies (with TLS verification disabled)
RUN git config --global http.sslVerify false && \
    go env -w GOPROXY=direct && \
    go mod download

# Copy the source code into the container
COPY . .

# Build the application explicitly for AMD64
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o main .

# Final stage
FROM alpine:3.18

# Set environment variables to bypass proxy in the final image as well
ENV HTTP_PROXY=""
ENV HTTPS_PROXY=""
ENV NO_PROXY="localhost,127.0.0.1"

# Copy the binary from builder
COPY --from=builder /app/main /main

# Copy the index.html file to multiple locations for flexibility
COPY index.html /index.html
COPY index.html /app/index.html
COPY index.html ./index.html

# Expose port 8080 to the outside world
EXPOSE 8080

# Command to run the executable
CMD ["/main"]

